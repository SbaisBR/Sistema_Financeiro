unit dm;

interface

uses
  Windows, Messages, SysUtils, Classes, Graphics, Controls, SvcMgr, Dialogs,
  DBXpress, DB, SqlExpr, FMTBcd, DBClient, Provider;

type
  TConexao = class(TService)
    Conexao: TSQLConnection;
    qryBusca: TSQLQuery;
    sqlLogin: TSQLDataSet;
    dspLogin: TDataSetProvider;
    cdsLogin: TClientDataSet;
    sqlLoginIDUSUARIO: TIntegerField;
    sqlLoginNOME: TStringField;
    sqlLoginSENHA: TStringField;
    sqlLoginTIPO: TStringField;
    sqlLoginCADASTRO: TDateField;
    sqlLoginNIVEL: TStringField;
    cdsLoginIDUSUARIO: TIntegerField;
    cdsLoginNOME: TStringField;
    cdsLoginSENHA: TStringField;
    cdsLoginTIPO: TStringField;
    cdsLoginCADASTRO: TDateField;
    cdsLoginNIVEL: TStringField;
    sqlUsuario: TSQLDataSet;
    IntegerField1: TIntegerField;
    StringField1: TStringField;
    StringField2: TStringField;
    StringField3: TStringField;
    DateField1: TDateField;
    StringField4: TStringField;
    dspUsuario: TDataSetProvider;
    cdsUsuario: TClientDataSet;
    IntegerField2: TIntegerField;
    StringField5: TStringField;
    StringField6: TStringField;
    StringField7: TStringField;
    DateField2: TDateField;
    StringField8: TStringField;



  private
    { Private declarations }
    FFSelecionar : Boolean;
    FIDUsuario: integer;
    procedure SetFSelecionar(const Value: Boolean);
  public
    Usuario, Tipo : String;
   // function GetServiceController: TServiceController; override;
    { Public declarations }

    //property FSelecionar : Boolean read FFSelecionar write SetFSelecionar;
    //property IDUsuario          : integer read FIDUsuario write FIDUsuario;

  end;

var
  Conexao: TConexao;

implementation

{$R *.DFM}

{procedure ServiceController(CtrlCode: DWord); stdcall;
begin
  Conexao.Controller(CtrlCode);
end;}

{function TConexao.GetServiceController: TServiceController;
begin
  Result := ServiceController;
end;}

{procedure TConexao.SetFSelecionar(const Value: Boolean);
begin
  FFSelecionar := Value;
end;}

end.
